<section id="content">
  <%= Discussion %>
</section>

<script type="text/jsx">

  var DiscussionShow = React.createClass({
    loadCommentsFromServer: function () {
      $.ajax({
        url: this.props.url,
        dataType: 'json',
        cache: false,
        success: function (data) {
          this.setState({data: data});
        }.bind(this),
        error: function (xhr, status, err) {
          console.error(this.props.url, status, err.toString());
        }.bind(this)
      });
    },
    handleCommentSubmit: function (comment) {
      var commentObject = { "comment": comment };
      $.ajax({
        url: "http://localhost:3000/api/comments",
        dataType: 'json',
        type: 'POST',
        data: commentObject,
        success: function (data) {
          this.loadCommentsFromServer();
        }.bind(this),
        error: function (xhr, status, err) {
          console.error(this.props.url, status, err.toString());
        }.bind(this)
      });
      this.loadCommentsFromServer();
    },
    getInitialState: function () {
      return {data: []};
    },
    componentDidMount: function () {
      this.loadCommentsFromServer();
      setInterval(this.loadCommentsFromServer, this.props.pollInterval);
    },
    render: function () {
      var url = "http://localhost:3000/discussions/" + this.state.data.id;
      var indexUrl = "http://localhost:3000/projects/" + this.state.data.project_id + "/discussions";
      return (
        <div className="discussion">
          <h1 className="discussionTitle">{this.state.data.title}</h1>
          <a className="linkBack" href={indexUrl}>Back to all discussions</a>
          <br />
          <p className="discussionAuthor">
            Author: {this.state.data.author_name}
          </p>
          <br />
          <CommentsList data={this.state.data.comments}/>
          <CommentForm submitComment={this.handleCommentSubmit} />
        </div>
      );
    }
  });

  var CommentsList = React.createClass({
    render: function () {
      var commentNodes = [];
      commentNodes = this.props.data && this.props.data.map(function (comment) {
        return (
          <Comment id={comment.id}
                   author={comment.author_fname + " " + comment.author_lname}
                   content={comment.content} />
        );
      });
      return (
        <div className="commentList">
          {commentNodes}
        </div>
      );
    }
  });

  var Comment = React.createClass({
    deleteComment: function (comment_id) {
      var url = "http://localhost:3000/api/comments/" + comment_id;
      $.ajax({
        url: url,
        dataType: 'json',
        type: 'DELETE',
        success: function (data) {
          return;
          //this.loadCommentsFromServer();
        }.bind(this),
        error: function (xhr, status, err) {
          console.error(this.props.url, status, err.toString());
        }.bind(this)
      });
      //this.loadCommentsFromServer();
    },
    render: function () {
      return (
        <div className="comment">
          <h2 className="commentAuthor">
            {this.props.author}
          </h2>
          <span>{this.props.content}</span>
          <DeleteButton deleteComment={this.deleteComment} id={this.props.id}/>
        </div>
      );
    }
  });

  var CommentForm = React.createClass({
    handleSubmit: function (event) {
      event.preventDefault();
      var text = React.findDOMNode(this.refs.text).value.trim();
      if (!text) {
        return;
      }
      // send information to server in function callback
      this.props.submitComment({content: text, discussion_id: <%= @discussion.id %>});
      // reset form
      React.findDOMNode(this.refs.text).value="";
      return;
    },
    render: function () {
      return (
        <form className="commentForm" onSubmit={this.handleSubmit}>
          <textarea className="commentContent" name="name" rows="8" cols="40" ref="text" placeholder="Your comment..."></textarea>
          <br />
          <input className="edit-button" type="submit" value="Post" />
        </form>
      );
    }
  });

  var DeleteButton = React.createClass({
    handleSubmit: function (event) {
      event.preventDefault();
      this.props.deleteComment(this.props.id);
      return;
    },
    render: function () {
      return (
        <button className="delete-button" onClick={this.handleSubmit}>Delete</button>
      );
    }
  });

  React.render(
    <DiscussionShow pollInterval={1000} url="http://localhost:3000/api/discussions/<%= @discussion.id %>"/>,
    document.getElementById('content')
  );
</script>
